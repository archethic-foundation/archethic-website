const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CmG-xWu4-D1NDfmlZ.js","assets/index-Bibw8odz.js","assets/index-BelLbmDI.css","assets/create-D7FD56l0-D2uTFRvt.js","assets/chain-DfK5JtF7-Jmo_aVnV.js","assets/index-DzipMppZ-CzyZNOLx.js"])))=>i.map(i=>d[i]);
import{aE as A,aH as I,at as T,aI as k,aJ as x,aK as p,aL as N,be as E,aM as $,aG as _,aF as l,_ as w,aO as R,bf as P}from"./index-Bibw8odz.js";import{I as B,R as F}from"./chain-DfK5JtF7-Jmo_aVnV.js";var O=Object.defineProperty,L=(n,t,s)=>t in n?O(n,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[t]=s,r=(n,t,s)=>(L(n,typeof t!="symbol"?t+"":t,s),s);const v="0x1::aptos_coin::AptosCoin",d="::";class y extends F{}const g="Aptos",U=n=>/^(0x)?[0-9a-fA-F]+::\w+::\w+$/.test(n),J=n=>n.split(d)[0],b=class h extends B{constructor(t,s){super(t,s??I(t,h._platform))}getRpc(t){if(t in this.config)return new T(this.config[t].rpc);throw new Error("No configuration available for chain: "+t)}getChain(t,s){if(t in this.config)return new y(t,this);throw new Error("No configuration available for chain: "+t)}static nativeTokenId(t,s){if(!this.isSupportedChain(s))throw new Error(`invalid chain: ${s}`);return k.tokenId(s,v)}static isNativeTokenId(t,s,a){return!this.isSupportedChain(s)||a.chain!==s?!1:this.nativeTokenId(t,s)==a}static isSupportedChain(t){return x(t)===h._platform}static async getDecimals(t,s,a){if(p(a))return N(h._platform);const i=a.toString(),e=`0x1::coin::CoinInfo<${i}>`;return(await s.getAccountResource(i.split(d)[0],e)).data.decimals}static async getBalance(t,s,a,i){const e=p(i)?v:i.toString(),o=new E(s);try{return await o.checkBalance(a,{coinType:e})}catch(c){if(c.errorCode==="resource_not_found"&&c.status===404)return null;throw c}}static async getBalances(t,s,a,i){return(await Promise.all(i.map(async e=>{const o=await this.getBalance(t,s,a,e);return{[p(e)?"native":new m(e).toString()]:o}}))).reduce((e,o)=>Object.assign(e,o),{})}static async sendWait(t,s,a){const i=[];for(const e of a){const o=await s.submitTransaction(e),c=await s.waitForTransactionWithResult(o.hash);i.push(c.hash)}return i}static async getLatestBlock(t){const s=await t.getLedgerInfo();return Number(s.block_height)}static async getLatestFinalizedBlock(t){const s=await t.getLedgerInfo();return Number(s.block_height)}static chainFromChainId(t){const s=$(h._platform,BigInt(t));if(!s)throw new Error(`No matching chainId to determine network and chain: ${t}`);const[a,i]=s;return[a,i]}static async chainFromRpc(t){const s=await t.getChainId();return this.chainFromChainId(s.toString())}};r(b,"_platform",g);let u=b;function W(n){return n.length%2!==0||n.length<66?(n=n.startsWith("0x")?n.slice(2):n,"0x"+n.padStart(64,"0")):n}const C=class f{constructor(t){if(r(this,"platform",u._platform),r(this,"type","Native"),r(this,"address"),r(this,"module"),f.instanceof(t))this.address=t.address,this.module=t.module;else if(_.instanceof(t))this.address=t.toUint8Array();else if(typeof t=="string"){if(U(t)){const s=t.split(d);this.module=s.slice(1).join(d),t=s[0]}if(t=W(t),!l.valid(t))throw new Error("Invalid Aptos address: "+t);this.address=l.decode(t)}else this.address=t}unwrap(){const t=l.encode(this.address).replace(/^0+/,""),s=this.module?d+this.module:"";return`0x${t}${s}`}toString(){return this.unwrap()}toNative(){return this}toUint8Array(){return this.address}toUniversalAddress(){return new _(this.toUint8Array())}static instanceof(t){return t.platform===u._platform}equals(t){return f.instanceof(t)?t.unwrap()===this.unwrap():this.toUniversalAddress().equals(t)}};r(C,"byteSize",32);let m=C;A(g,m);async function j(n,t){const[s,a]=await u.chainFromRpc(n);return new D(a,new P(l.decode(t)),n)}class D{constructor(t,s,a,i){r(this,"_chain"),r(this,"_account"),r(this,"_rpc"),r(this,"_debug"),this._chain=t,this._account=s,this._rpc=a,this._debug=i}chain(){return this._chain}address(){return this._account.address().hex()}async signAndSend(t){const s=[];for(const a of t){const{description:i,transaction:e}=a;this._debug&&console.log(`Signing: ${i} for ${this.address()}`);const o={gas_unit_price:"100",max_gas_amount:"30000",expiration_timestamp_secs:(BigInt(Date.now()+8*60*60*1e3)/1000n).toString()},c=await this._rpc.generateTransaction(this._account.address(),e,o),{hash:S}=await this._simSignSend(c);s.push(S)}return s}async _simSignSend(t){return await this._rpc.simulateTransaction(this._account,t).then(s=>s.forEach(a=>{if(!a.success)throw new Error(`Transaction failed: ${a.vm_status}
${JSON.stringify(a,null,2)}`)})),this._rpc.signTransaction(this._account,t).then(s=>this._rpc.submitTransaction(s)).then(s=>this._rpc.waitForTransactionWithResult(s.hash))}}const z={Address:m,Platform:u,getSigner:j,protocols:{WormholeCore:()=>w(()=>import("./index-CmG-xWu4-D1NDfmlZ.js"),__vite__mapDeps([0,1,2,3,4])),TokenBridge:()=>w(()=>import("./index-DzipMppZ-CzyZNOLx.js"),__vite__mapDeps([5,1,2,4]))},getChain:(n,t,s)=>new y(t,new u(n,R(n,g,{[t]:s})))},V=Object.freeze(Object.defineProperty({__proto__:null,default:z},Symbol.toStringTag,{value:"Module"}));export{u as A,d as a,v as b,J as c,m as d,V as e,U as i};
