@import '@/ui/_styles/variables.scss';

.container {
  position: relative;
  width: 100%;
  height: 100vh;
  padding-top: $layout-desktop-navigation-height;
  z-index: $index-section-content;

  display: flex;
  flex-direction: column;
  justify-content: center;

  &:before {
    content: ' ';
    width: 100%;
    height: $layout-desktop-navigation-height;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10;
    background: linear-gradient(
      180deg,
      rgba(16, 8, 38, 0.8534007352941176) 0%,
      rgba(16, 8, 38, 0.7245491946778712) 30%,
      rgba(16, 8, 38, 0) 100%
    );
  }

  @include small() {
    padding-top: $layout-mobile-navigation-height;
    justify-content: flex-end;
    padding-bottom: 120px;
  }
}

.content {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 24px;
  z-index: 1;

  .heroTitle {
    max-width: 1150px;

    i {
      width: 190px;
      height: 10px;
      display: inline-block;
    }

    span {
      @include transition(0s, all);
      transition-delay: 0s;

      position: relative;
      display: inline-block;
      opacity: 0;
      transform: translateY(30px);

      @for $i from 1 to 10 {
        &:nth-child(#{$i}) {
          transition-delay: $i * $transition-delay-default;
        }
      }
    }

    @include medium() {
      max-width: 880px;
    }

    @include small-early() {
      i,
      br {
        display: none;
      }
    }

    @include small() {
      i,
      br {
        display: none;
      }
    }
  }

  .heroDescription {
    display: flex;
    flex-direction: column;
    max-width: 550px;
    gap: 24px;

    @include mediumUp() {
      padding-left: $layout-section-left-padding;
    }

    @include small() {
      h2 {
        margin-top: -12px;
      }
    }
  }

  .buttonsList {
    display: flex;
    gap: 24px;

    @include mediumUp() {
      gap: 24px;
    }
    @include small() {
      flex-direction: column;
      align-items: flex-start;
      gap: 16px;
    }
  }
}

.mobileBlackBgShape {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background: linear-gradient(
    181deg,
    rgba(16, 8, 38, 0.75) 0%,
    rgba(16, 8, 38, 0.3) 31%,
    rgba(16, 8, 38, 0) 100%
  );

  @include mediumUp() {
    display: none;
  }
}

.bgShapes {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  overflow: hidden;
  filter: blur(70px);

  @include small() {
    opacity: 0.5;
  }

  .bgShapeA {
    position: absolute;
    top: 0;
    left: 0;
    width: 50%;
    height: 100%;
    background: radial-gradient(
      82.71% 94.58% at 5.14% 7.32%,
      rgba(153, 72, 247, 0.6) 0%,
      rgba(153, 72, 247, 0) 64.06%
    );
  }

  .bgShapeB {
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(50% 47.71% at 100% 60.77%, #d55cff 0%, rgba(32, 24, 68, 0) 100%);
    mix-blend-mode: hard-light;
    opacity: 0.4;
  }

  .bgShapeC {
    position: absolute;
    top: 0;
    left: 25%;
    width: 50%;
    height: 100%;
    background: radial-gradient(50% 50% at 50% 50%, #d55cff 0%, rgba(32, 24, 68, 0) 100%);
    opacity: 0.2;
  }
}

.heroBlueBgShape {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #100826;
  z-index: -1;
}

/*
 * Animations
 */
.heroTitle {
  &[data-inview='true'] {
    span {
      @include transition(1.8s, opacity, transform);
      opacity: 1;
      transform: translateY(0);
      margin-bottom: 0;
    }
  }
}

$transition-extra-delay: 0.5s;
.heroDescription {
  h2,
  a {
    @include transition(0s, all);
    transition-delay: 0s;
    opacity: 0;
    transform: translateY(30px);
  }

  &[data-inview='true'] {
    h2,
    a {
      @include transition(1.8s, opacity, transform);

      opacity: 1;
      transform: translateY(0);
      margin-bottom: 0;
    }
    h2 {
      transition-delay: 6 * $transition-delay-default + $transition-extra-delay;
    }
    a {
      &:nth-child(1) {
        transition-delay: 7 * $transition-delay-default + $transition-extra-delay;
      }
      &:nth-child(2) {
        transition-delay: 8 * $transition-delay-default + $transition-extra-delay;
      }
    }
  }
}
